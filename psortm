# Perl script wrapper to call psortm inside the docker container.
# Run this script using 'perl psortm [OPTIONS]'

use Getopt::Long;

docker run -v localdirectory:/tmp <org>/<container> -n -d > /tmp < stdin_file

sub main {
    my ($seqfile, $taxfile, $help);

    GetOptions('seq|s=s'  => \$seqfile,  
               'tax|t=s'  => \$taxfile,
               'help|h'   => \$help,
               'format|f=s'  => \$format,   'divergent|d=f' => \$divergent,
               'verbose|v'   => \$verbose, 
               'cutoff|c=f'  => \$cutoff,   'output|o=s'    => \$output,
               'taxfile|t=s' => \$taxfile,  'seq|s=s'       => \$seqfile,
               'exact|e'     => \$exact,    'version'       => \$version);

    usage() && exit(0) if($help);

}

sub usage {
    $0 =~ /^.*\/(.+)/;
    print("Usage: $1 -s <sequence file> -t <taxonomic classification file> [OPTIONS]\n");
    print("Example command: psortm -s myseqs.fasta -t mytax.csv\n");
    print("  --seqfile, -s     Input sequence file path (required)\n");
    print("  --taxfile, -t     A tab- or comma-delimited file of sequence ids with\n");
    print("                    their predicted taxonomic classifications (taxonomy ID\n");
    print("                    or taxonomic name). This can be generated using a program\n");
    print("                    such as MEGAN6 (required)\n");
    print("  --cutoff, -c      Sets a cutoff value for reported results\n");
    print("  --divergent, -d   Sets a cutoff value for the multiple\n");
    print("                    localization flag\n");
    print("  --format, -f      Specifies sequence format (default is FASTA)\n");
    print("  --exact, -e       Skip SCLBLASTe (useful for batch runs of data\n");
    print("                    against itself in SCLBLAST)\n");
    print("  --output, -o      Specifies the format for the output (default is\n");
    print("                    'terse'  Value can be one of: terse or long\n");
    print("  --verbose, -v     Be verbose while running\n");
    print("  --version         Print the version of PSortb\n");
    print("  --help, -h        Displays usage information\n");
}

main();
